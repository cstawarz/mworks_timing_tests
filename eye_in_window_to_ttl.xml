<?xml version="1.0" standalone="no"?>
<monkeyml version="1.0">
    <io_devices tag="IO Devices">
        <calibrator type="standard_eye_calibrator" tag="eye_calibrator" eyeh_raw="eye_h_raw" eyev_raw="eye_v_raw" eyeh_calibrated="eye_h_calibrated" eyev_calibrated="eye_v_calibrated"></calibrator>
    </io_devices>
    <variables tag="Variables">
        <variable tag="should_fixate" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
        <variable tag="stop_eye_movement" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
        <variable tag="eye_h_raw" scope="global" logging="when_changed" default_value="0.0" type="float"></variable>
        <variable tag="eye_v_raw" scope="global" logging="when_changed" default_value="0.0" type="float"></variable>
        <variable tag="data_interval" scope="global" logging="when_changed" default_value="1000" type="integer"></variable>
        <variable tag="is_fixating" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
        <variable tag="eye_h_calibrated" scope="global" logging="when_changed" default_value="0.0" type="float"></variable>
        <variable tag="eye_v_calibrated" scope="global" logging="when_changed" default_value="0.0" type="float"></variable>
        <variable tag="eye_h" scope="global" logging="when_changed" default_value="0.0" type="float"></variable>
        <variable tag="eye_v" scope="global" logging="when_changed" default_value="0.0" type="float"></variable>
        <variable tag="eye_in_window" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
        <variable tag="saccade" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
        <variable tag="ttl_out" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
        <variable tag="num_repeats" scope="global" logging="when_changed" default_value="10000" type="integer"></variable>
        <variable tag="num_done" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
        <variable tag="start" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
        <variable tag="stop" scope="global" logging="when_changed" default_value="0" type="integer"></variable>
    </variables>
    <sounds tag="Sounds"></sounds>
    <stimuli tag="Stimuli">
        <stimulus type="fixation_point" tag="fixation_point" color="1,0,0" trigger_width="2" trigger_watch_x="eye_h" trigger_watch_y="eye_v" trigger_flag="eye_in_window" x_size="0.5" y_size="0.5" x_position="0" y_position="0" rotation="0" alpha_multiplier="1"></stimulus>
    </stimuli>
    <filters tag="Filters">
        <filter type="boxcar_filter_1D" in1="eye_h_calibrated" out1="eye_h" width_samples="5" tag="eye_h_filter"></filter>
        <filter type="boxcar_filter_1D" in1="eye_v_calibrated" out1="eye_v" width_samples="5" tag="eye_v_filter"></filter>
        <filter type="basic_eye_monitor" eyeh_calibrated="eye_h_calibrated" eyev_calibrated="eye_v_calibrated" eye_state="saccade" width_samples="5" saccade_entry_speed="60" saccade_exit_speed="20" tag="eye_monitor"></filter>
    </filters>
    <optimizers tag="Optimizers"></optimizers>
    <experiment tag="New Experiment" full_name="" description="">
        <protocol tag="New Protocol" nsamples="1" sampling_method="cycles" selection="sequential" interruptible="YES">
            <task_system tag="New Task System" interruptible="YES">
                <task_system_state tag="Begin State System" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="assignment" tag="Reset should_fixate" variable="should_fixate" value="0"></action>
                    <action type="assignment" tag="Reset stop_eye_movement" variable="stop_eye_movement" value="0"></action>
                    <action type="schedule" tag="Schedule eye signal updates" delay="0" duration="data_interval" repeats="-999" cancel="stop_eye_movement">
                        <action type="if" tag="If fixation status changed ..." condition="is_fixating != should_fixate">
                            <action type="assignment" tag="Update is_fixating" variable="is_fixating" value="should_fixate"></action>
                        </action>
                        <action type="if" tag="If fixating ..." condition="is_fixating">
                            <action type="assignment" tag="Update eye_h_raw" variable="eye_h_raw" value="rand(-0.5, 0.5)"></action>
                            <action type="assignment" tag="Update eye_v_raw" variable="eye_v_raw" value="rand(-0.5, 0.5)"></action>
                        </action>
                        <action type="if" tag="If NOT fixating ..." condition="!is_fixating">
                            <action type="assignment" tag="Update eye_h_raw" variable="eye_h_raw" value="10+rand(-0.5, 0.5)"></action>
                            <action type="assignment" tag="Update eye_v_raw" variable="eye_v_raw" value="10+rand(-0.5, 0.5)"></action>
                        </action>
                    </action>
                    <action tag="Queue fixation point" type="queue_stimulus" stimulus="fixation_point"></action>
                    <action tag="Update Stimulus Display" type="update_stimulus_display"></action>
                    <action type="assignment" tag="Reset num_done" variable="num_done" value="0"></action>
                    <action type="assignment" tag="Start event collection" variable="start" value="!start"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="direct" tag="Always Go to ... 2" target="Wait for fixation"></transition>
                </task_system_state>
                <task_system_state tag="Wait for fixation" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="assignment" tag="Start fixation" variable="should_fixate" value="1"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="conditional" tag="If Condition is True, Transition to ..." condition="eye_in_window &amp;&amp; !saccade" target="Fixation"></transition>
                </task_system_state>
                <task_system_state tag="Fixation" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="assignment" tag="Toggle ttl_out" variable="ttl_out" value="!ttl_out"></action>
                    <action type="assignment" tag="Increment num_done" variable="num_done" value="num_done + 1"></action>
                    <action type="assignment" tag="Stop fixation" variable="should_fixate" value="0"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition type="conditional" tag="If Condition is True, Transition to ... 2" condition="num_done >= num_repeats" target="Exit State System"></transition>
                    <transition type="conditional" tag="If Condition is True, Transition to ... 3" condition="!eye_in_window &amp;&amp; !saccade" target="Wait for fixation"></transition>
                </task_system_state>
                <task_system_state tag="Exit State System" interruptible="YES">
                    <action_marker _unmoveable="1" tag="Actions"></action_marker>
                    <action type="assignment" tag="Stop event collection" variable="stop" value="!stop"></action>
                    <action type="assignment" tag="Stop eye movement" variable="stop_eye_movement" value="1"></action>
                    <transition_marker _unmoveable="1" tag="Transitions"></transition_marker>
                    <transition tag="Return to parent task system" type="yield"></transition>
                </task_system_state>
            </task_system>
        </protocol>
    </experiment>
</monkeyml>